/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            label = "Base";
            bindings = <
&mt LS(TAB) TAB              &kp Q               &kp W           &kp F         &kp P         &kp B          &kp J            &kp L            &kp U         &kp Y       &kp SEMICOLON  &kp EQUAL
&mt LA(BACKSPACE) BACKSPACE  &mt LEFT_COMMAND A  &mt LEFT_ALT R  &mt LCTRL S   &mt LSHIFT T  &kp G          &kp M            &mt RSHFT N      &mt RCTRL E   &mt RALT I  &mt RCMD O     &kp SQT
&kp LC(LG(SPACE))            &kp Z               &kp X           &kp C         &kp D         &kp V          &kp K            &kp H            &kp COMMA     &kp DOT     &kp FSLH       &caps_word
                                                                 &lt 3 ESCAPE  &lt 1 SPACE   &lt 2 LA(C)    &lt 5 RG(SPACE)  &lt 4 RG(ENTER)  &lt 6 DELETE
            >;
        };

        nav {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            label = "Nav";
            bindings = <
&trans     &none     &none     &none      &none      &none           &kp K_REDO  &kp K_PASTE     &kp K_COPY      &kp K_CUT     &kp K_UNDO       &none
&trans     &kp LCMD  &kp LALT  &kp LCTRL  &kp LSHFT  &bt BT_SEL 4    &kp CAPS    &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &trans
&kp LSHFT  &trans    &trans    &trans     &trans     &trans          &kp INS     &kp HOME        &kp PAGE_DOWN   &kp PAGE_UP   &kp END          &trans
                               &kp LGUI   &trans     &kp SPACE       &kp RET     &kp BACKSPACE   &kp DELETE
            >;
        };

        mouse {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            label = "Mouse";
            bindings = <
&none      &none   &none   &none     &none   &none        &kp K_REDO  &kp K_PASTE  &kp K_COPY  &kp K_CUT  &kp K_UNDO  &trans
&none      &trans  &trans  &trans    &trans  &trans       &none       &trans       &trans      &trans     &trans      &trans
&kp LSHFT  &trans  &trans  &trans    &trans  &trans       &none       &trans       &trans      &trans     &trans      &trans
                           &kp LGUI  &trans  &kp SPACE    &trans      &trans       &trans
            >;
        };

        media {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans      &trans            &trans             &trans           &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans      &kp C_PREV        &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_NEXT    &trans
&trans  &trans  &trans  &trans  &trans  &trans    &bt BT_CLR  &bt BT_SEL 0      &bt BT_SEL 1       &bt BT_SEL 2     &bt BT_SEL 3  &bt BT_SEL 4
                        &trans  &trans  &trans    &kp K_STOP  &kp K_PLAY_PAUSE  &kp K_MUTE
            >;

            label = "Media";
        };

        num {
            bindings = <
&trans  &kp LEFT_BRACKET  &kp NUMBER_7  &kp NUMBER_8  &kp RIGHT_BRACKET  &trans           &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp SEMICOLON     &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6       &kp EQUAL        &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp GRAVE         &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3       &kp BACKSLASH    &trans  &trans  &trans  &trans  &trans  &trans
                                        &kp PERIOD    &kp NUMBER_0       &kp MINUS        &trans  &trans  &trans
            >;

            label = "Num";
        };

        sym {
            bindings = <
&trans  &kp LEFT_BRACE  &kp AMPERSAND    &kp ASTERISK          &kp LEFT_PARENTHESIS   &kp RIGHT_BRACE    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp COLON       &kp DOLLAR       &kp PERCENT           &kp CARET              &kp PLUS           &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp TILDE       &kp EXCLAMATION  &kp AT                &kp HASH               &kp PIPE           &trans  &trans  &trans  &trans  &trans  &trans
                                         &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp UNDERSCORE     &trans  &trans  &trans
            >;

            label = "Sym";
        };

        fun {
            bindings = <
&trans  &kp F12  &kp F7  &kp F8             &kp F9  &kp SYSREQ              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp F11  &kp F4  &kp F5             &kp F6  &kp LS(LG(N5))          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp F10  &kp F1  &kp F2             &kp F3  &kp LS(LG(NUMBER_4))    &trans  &trans  &trans  &trans  &trans  &trans
                         &kp K_APPLICATION  &trans  &trans                  &trans  &trans  &trans
            >;

            label = "Fun";
        };
    };
};
